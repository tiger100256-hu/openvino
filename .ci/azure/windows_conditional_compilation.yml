trigger:
  branches:
    include:
    - master
    - releases/*
  paths:
    exclude:
    - docs/*

jobs:
- job: WinCC
  # About 150% of total time
  timeoutInMinutes: 60

  pool:
    name: WIN_VMSS_VENV_F8S_WU2

  variables:
    system.debug: true
    VSTS_HTTP_RETRY: 5
    VSTS_HTTP_TIMEOUT: 200
    BUILD_TYPE: Release
    REPO_DIR: $(Build.Repository.LocalPath)
    OPENVINO_CONTRIB_REPO_DIR: $(REPO_DIR)\..\openvino_contrib
    MODELS_PATH: $(REPO_DIR)\..\testdata
    WORK_DIR: $(Pipeline.Workspace)\_w
    BUILD_DIR: $(WORK_DIR)\build
    MSVS_VARS_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
    MSVC_COMPILER_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\bin\Hostx64\x64\cl.exe
    INSTALL_DIR: $(WORK_DIR)\install_pkg
    SETUPVARS: $(INSTALL_DIR)\setupvars.bat

  steps:
  - script: |
      powershell -command "Invoke-RestMethod -Headers @{\"Metadata\"=\"true\"} -Method GET -Uri http://169.254.169.254/metadata/instance/compute?api-version=2019-06-01 | format-custom"
      where python3
      python3 --version
      where python
      python --version
      where java
      java -version
      wmic computersystem get TotalPhysicalMemory
      wmic cpu list
      wmic logicaldisk get description,name
      wmic VOLUME list
      set
    displayName: 'System info'

  - script: |
      rd /Q /S $(WORK_DIR) & mkdir $(WORK_DIR)
      rd /Q /S $(BUILD_DIR) & mkdir $(BUILD_DIR)
    displayName: 'Make dir'

  - checkout: self
    clean: true
    lfs: false
    submodules: recursive
    path: openvino

  - script: |
      rem Speed up build
      powershell -command "Invoke-WebRequest https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-win.zip -OutFile ninja-win.zip"
      powershell -command "Expand-Archive -Force ninja-win.zip"
    workingDirectory: $(WORK_DIR)
    displayName: 'Install dependencies'

  - script: |
      set PATH=$(WORK_DIR)\ninja-win;%PATH%
      call "$(MSVS_VARS_PATH)" && cmake -GNinja -DENABLE_FASTER_BUILD=ON -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) -DENABLE_PROFILING_ITT=ON -DSELECTIVE_BUILD=COLLECT -DCMAKE_C_COMPILER:PATH="$(MSVC_COMPILER_PATH)" -DCMAKE_CXX_COMPILER:PATH="$(MSVC_COMPILER_PATH)" $(REPO_DIR)
    workingDirectory: $(BUILD_DIR)
    displayName: 'CMake'

  - script: dir $(REPO_DIR)\temp\ /s
    displayName: 'List temp SDKs'

  - script: call "$(MSVS_VARS_PATH)" && $(WORK_DIR)\ninja-win\ninja
    workingDirectory: $(BUILD_DIR)
    displayName: 'Build Win CC'

  - script: dir $(REPO_DIR)\bin\ /s
    displayName: 'List bin files'

  - script: cmake -DCMAKE_INSTALL_PREFIX=$(INSTALL_DIR) -P cmake_install.cmake
    workingDirectory: $(BUILD_DIR)
    displayName: 'Install'

  - script: dir $(INSTALL_DIR) /s
    displayName: 'List install files'
